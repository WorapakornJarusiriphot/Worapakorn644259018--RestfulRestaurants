const genRestaurantCard = (restaurant) =>{
  const card = document.createElement("div")
  card.className ="card";
  card.style = "width: 18rem;"
  const restoCard = `
    <img src="${restaurant.imageURL}" class="card-img-top" alt="...">
    <div class="card-body">
      <h5 class="card-title">${restaurant.name}</h5>
      <p class="card-text">${restaurant.type}</p>
      <a href="edit.html?id=${restaurant.id}" class="btn btn-warning">Edit</a>
      <a href="delete.html?id=${restaurant.id}" class="btn btn-danger">Delete</a>
    </div>
  `;
  card.innerHTML = restoCard;
  
  const restaurants = document.querySelector("#restaurants");
  restaurants.appendChild(card);
}

const searchRestaurant = async () => {
  const query = document.getElementById('search-query').value;
  const searchResults = await fetch(`http://localhost:5000/restaurants?query=${query}`);
  const restaurants = await searchResults.json();

  // Clear existing restaurants
  document.getElementById('restaurants').innerHTML = '';

  // Generate restaurant cards for search results
  restaurants.forEach(genRestaurantCard);
};


const onLoad = async () => {
const allRestaurants = await fetch("http://localhost:5000/restaurants", {
  method: "GET", // *GET, POST, PUT, DELETE, etc.
  mode: "cors", // no-cors, *cors, same-origin
  cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
  credentials: "same-origin", // include, *same-origin, omit
  headers: {
    "Content-Type": "application/json",
  },
}).then((response) => {
  return response.json();
});
console.log(allRestaurants)
allRestaurants.forEach((restaurant) => genRestaurantCard(restaurant))
};
const main = () => {
onLoad();
};
main();



// Function to search restaurants by name and type
function searchRestaurants() {
    const searchString = document.getElementById('search-name').value.trim().toLowerCase();

    // Filtering the restaurants based on the search criteria
    const filteredRestaurants = restaurants.filter(restaurant => {
        return searchString === '' || restaurant.name.toLowerCase().includes(searchString) ||
               restaurant.type.toLowerCase().includes(searchString);
    });

    // Rendering the filtered restaurants
    renderRestaurants(filteredRestaurants);
}
